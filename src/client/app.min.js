<<<<<<< HEAD
"use strict";function ResultSet(){this.loaded=!1,this.loading=!0}var module=angular.module("app",["cla.filters","ui.utils","ui.router","ui.bootstrap","ui.select","ngSanitize","ngAnimate"]),filters=angular.module("cla.filters",[]);angular.element(document).ready(function(){angular.bootstrap(document,["app"])}),module.config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider,$locationProvider){$stateProvider.state("home",{url:"/",templateUrl:"/templates/home.html",controller:"HomeCtrl"}).state("home.settings",{templateUrl:"/templates/settings.html",controller:"SettingsCtrl",params:{user:{},owner:{},repo:{},gist:{}}}).state("repo",{"abstract":!0,url:"/:user/:repo?pullRequest",template:"<section ui-view></section>"}).state("repo.cla",{url:"",templateUrl:"/templates/cla.html",controller:"ClaController"}),$urlRouterProvider.otherwise("/"),$locationProvider.html5Mode({enabled:!0,requireBase:!1})}]).run(["$rootScope","$state","$stateParams",function($rootScope,$state,$stateParams){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams}]),ResultSet.prototype.set=function(error,value){this.loaded=!0,this.loading=!1,this.error=error,this.affix=value,this.value=this.value instanceof Array&&value instanceof Array?this.value.concat(value):value},module.factory("$RAW",["$q","$http",function($q,$http){return{call:function(m,functn,data,callback){var now=new Date;return $http.post("/api/"+m+"/"+functn,data).success(function(res){try{res=JSON.parse(res)}catch(ex){}callback(null,res,new Date-now)}).error(function(res){callback(res,null,new Date-now)})},get:function(url,user_token){var deferred=$q.defer(),header={};return header.Accept="application/vnd.github.moondragon+json",user_token&&(header.Authorization="token "+user_token),$http.get(url,{headers:header}).success(function(data,status){deferred.resolve(data)}).error(function(err,status){deferred.reject(err)}),deferred.promise},post:function(url,d,user_token){var deferred=$q.defer();return $http.post(url,d).success(function(data,status){deferred.resolve(data)}).error(function(err,status){deferred.reject(err)}),deferred.promise}}}]),module.factory("$RPC",["$RAW","$log",function($RAW,$log){return{call:function(m,functn,data,callback){var res=new ResultSet;return $RAW.call(m,functn,data,function(error,value){res.set(error,value),$log.debug("$RPC",m,functn,data,res,res.error),"function"==typeof callback&&callback(res.error,res)}),res}}}]),module.factory("$HUB",["$RAW","$log",function($RAW,$log){function parse_link_header(header){if(0===header.length)throw new Error("input must not be of zero length");var parts=header.split(","),links={};return parts.forEach(function(p){var section=p.split(";");if(2!==section.length)throw new Error('section could not be split on ";"');var url=section[0].replace(/<(.*)>/,"$1").trim(),name=section[1].replace(/rel="(.*)"/,"$1").trim();links[name]=url}),links}var exec=function(type,res,args,call){return $RAW.call("github",type,args,function(error,value){var data=value?value.data:null,meta=value?value.meta:null;if(!data&&value&&(data=value),res.set(error,data),meta){res.meta=meta;var links=meta.link?parse_link_header(meta.link):null;res.hasMore=meta.hasMore||!!links&&!!links.next,res.getMore=res.hasMore?function(){res.loaded=!1,res.loading=!0,links.next?args.url=links.next:args.arg.page=args.arg.page+1||2,exec(type,res,args,call)}:null}$log.debug("$HUB",args,res,res.error),"function"==typeof call&&call(res.error,res)}),res};return{call:function(o,functn,data,callback){return exec("call",new ResultSet,{obj:o,fun:functn,arg:data},callback)},direct_call:function(url,data,callback){return exec("direct_call",new ResultSet,{url:url,arg:data},callback)},wrap:function(o,functn,data,callback){return exec("wrap",new ResultSet,{obj:o,fun:functn,arg:data},callback)}}}]),module.factory("$HUBService",["$q","$HUB",function($q,$HUB){var exec=function(type,o,functn,data,callback){var deferred=$q.defer();return $HUB[type](o,functn,data,function(err,obj){return"function"==typeof callback&&callback(err,obj),err||deferred.resolve(obj),deferred.reject(err)}),deferred.promise},exec_direct=function(type,url,data){var deferred=$q.defer();return $HUB[type](url,data,function(err,obj){return err?deferred.reject(err):obj.hasMore?void obj.getMore():deferred.resolve(obj)}),deferred.promise};return{call:function(o,functn,data,callback){return exec("call",o,functn,data,callback)},direct_call:function(url,data){return exec_direct("direct_call",url,data)},wrap:function(o,functn,data,callback){return exec("wrap",o,functn,data,callback)}}}]),module.factory("$RPCService",["$q","$RPC",function($q,$RPC){return{call:function(o,functn,data,callback){var deferred=$q.defer();return $RPC.call(o,functn,data,function(err,obj){return"function"==typeof callback&&callback(err,obj),err||deferred.resolve(obj),deferred.reject()}),deferred.promise}}}]),module.controller("ClaController",["$window","$scope","$stateParams","$RAW","$RPCService","$HUBService","$modal","$sce","$timeout","$http","$q",function($window,$scope,$stateParams,$RAW,$RPCService,$HUBService,$modal,$sce,$timeout,$http,$q){function getCLA(){return $RPCService.call("cla","get",{repo:$stateParams.repo,owner:$stateParams.user},function(err,cla){err||($scope.claText=cla.value.raw)})}function checkCLA(){return $RPCService.call("cla","check",{repo:$stateParams.repo,owner:$stateParams.user},function(err,signed){!err&&signed.value&&($scope.signed=!0)})}function checkRepo(callback){return $RPCService.call("repo","check",{repo:$stateParams.repo,owner:$stateParams.user},function(err,exists){callback(exists.value)})}$scope.cla=null,$scope.signed=!1,$scope.signedCLA=null,$scope.repoExists=!1,$scope.params=$stateParams,$scope.user={},$scope.redirect="https://github.com/"+$stateParams.user+"/"+$stateParams.repo;var getUser=function(){return $HUBService.call("user","get",{},function(err,res){err||($scope.user=res,$scope.user.value.admin=!1,res.meta.scopes.indexOf("write:repo_hook")>-1&&($scope.user.value.admin=!0))})};$scope.agree=function(){var acceptUrl="/accept/"+$stateParams.user+"/"+$stateParams.repo;acceptUrl=$stateParams.pullRequest?acceptUrl+"?pullRequest="+$stateParams.pullRequest:acceptUrl,$window.location.href=acceptUrl};var userPromise=getUser(),repoPromise=checkRepo(function(exists){$scope.repoExists=exists,$scope.repoExists&&getCLA().then(function(data){$scope.cla=$sce.trustAsHtml(data.value.raw),$scope.cla.text=data.value.raw})});$q.all([userPromise,repoPromise]).then(function(){$stateParams.pullRequest&&($scope.redirect=$scope.redirect+"/pull/"+$stateParams.pullRequest),$scope.user&&$scope.user.value&&$scope.repoExists&&checkCLA().then(function(signed){signed.value&&($http.get("/logout?noredirect=true"),$timeout(function(){$window.location.href=$scope.redirect},5e3))})})}]),module.controller("HomeCtrl",["$rootScope","$scope","$document","$HUB","$RPCService","$RAW","$HUBService","$window","$modal","$timeout","$q","$location","$anchorScroll",function($rootScope,$scope,$document,$HUB,$RPCService,$RAW,$HUBService,$window,$modal,$timeout,$q,$location,$anchorScroll){$scope.repos=[],$scope.gists=[],$scope.claRepos=[],$scope.selectedRepo={},$scope.selectedGist={},$scope.query={},$scope.errorMsg=[],$scope.openSettings=!1,$scope.users=[],$scope.selectedIndex=-1,$scope.user={},$scope.nextstep={step1:!0},$scope.active=0,$scope.defaultClas=[];var githubGists="https://api.github.com/gists?per_page=100",githubUserRepos="https://api.github.com/user/repos?per_page=100";$scope.logAdminIn=function(){$window.location.href="/auth/github?admin=true"},$scope.isNotClaRepo=function(repo){var match=!1;return $scope.claRepos.some(function(claRepo){return match=claRepo.repo===repo.name&&claRepo.owner===repo.owner.login?!0:!1}),!match};var mixRepoData=function(claRepo){return $scope.repos.some(function(repo){return claRepo.repo===repo.name&&claRepo.owner===repo.owner.login?(claRepo.fork=repo.fork,!0):void 0}),claRepo},updateScopeData=function(){var repoSet=[];$scope.repos.forEach(function(repo){repoSet.push({owner:repo.owner.login,repo:repo.name})}),$RPCService.call("repo","getAll",{set:repoSet},function(err,data){$scope.claRepos=data.value,$scope.claRepos.forEach(function(claRepo){claRepo.active=claRepo.gist?!0:!1,claRepo=mixRepoData(claRepo)})})},getUser=function(){return $rootScope.user={value:{admin:!1}},$HUBService.call("user","get",{},function(err,res){err||($scope.user=res,$scope.user.value.admin=!1,res.meta.scopes.indexOf("write:repo_hook")>-1&&($scope.user.value.admin=!0),$rootScope.user=$scope.user,$rootScope.$broadcast("user"))})},getRepos=function(){$scope.user&&$scope.user.value&&$scope.user.value.admin&&$HUBService.direct_call(githubUserRepos).then(function(data){data.value.forEach(function(orgRepo){$scope.repos.push(orgRepo)}),updateScopeData()})},getGists=function(){$scope.gists=[],$scope.defaultClas.length||$scope.getDefaultClaFiles().then(function(data){$scope.gists=$scope.gists.concat($scope.defaultClas)}),$scope.gists=$scope.defaultClas.concat([]),$HUBService.direct_call(githubGists).then(function(data){data&&data.value&&data.value.forEach(function(gist){var gistFile={};gistFile.name=Object.keys(gist.files)[0],gistFile.name=gist.files[gistFile.name].filename?gist.files[gistFile.name].filename:gistFile.name,gistFile.url=gist.html_url,$scope.gists.push(gistFile)})})},showErrorMessage=function(text){var error=text;$timeout(function(){var i=$scope.errorMsg.indexOf(error);i>-1&&$scope.errorMsg.splice(i,1)},3e3),$scope.errorMsg.push(error)},linkSuccess=function(){var modal=$modal.open({templateUrl:"/modals/templates/linkSuccess.html",controller:"LinkCtrl",windowClass:"link-success",scope:$scope,resolve:{selectedGist:function(){return $scope.selectedGist},selectedRepo:function(){return $scope.selectedRepo}}});modal.result.then(function(){$scope.selectedRepo={},$scope.selectedGist={},$scope.newLink=!1},function(){$scope.selectedRepo={},$scope.selectedGist={},$scope.newLink=!1})},confirmAdd=function(){var modal=$modal.open({templateUrl:"/modals/templates/confirmLink.html",controller:"ConfirmCtrl",windowClass:"confirm-add",resolve:{selectedGist:function(){return $scope.selectedGist},selectedRepo:function(){return $scope.selectedRepo}}});modal.result.then(function(){$scope.linkStatus=null,linkSuccess(),$scope.link().then(function(){$scope.linkStatus="linked"},function(){$scope.linkStatus="failed"})})};$scope.confirmRemove=function(claRepo){var modal=$modal.open({templateUrl:"/modals/templates/confirmRemove.html",controller:"ConfirmCtrl",windowClass:"confirm-add",resolve:{selectedGist:function(){return{}},selectedRepo:function(){return claRepo}}});modal.result.then(function(repo){$scope.remove(repo)})};var report=function(claRepo){$modal.open({templateUrl:"/modals/templates/report.html",controller:"ReportCtrl",windowClass:"report",scope:$scope,resolve:{repo:function(){return claRepo}}})};$scope.getReport=function(claRepo){$scope.users=[],$scope.getUsers(claRepo).then(function(){}),report(claRepo)},$scope.info=function(){$modal.open({templateUrl:"/modals/templates/info_gist.html",controller:"InfoCtrl",windowClass:"howto"})},$scope.getDefaultClaFiles=function(){return $RAW.get("/static/cla-assistant.json").then(function(data){$scope.defaultClas=data["default-cla"]})},getUser().then(function(){getRepos(),getGists()}),$scope.clear=function($event){$event.stopPropagation(),$scope.selectedGist.gist=void 0},$scope.isValid=function(gist){var valid=!1;return valid=gist?!!gist.match(/https:\/\/gist\.github\.com\/([a-zA-Z0-9_-]*)/):!1},$scope.addWebhook=function(claRepo){claRepo.gist&&$RPCService.call("webhook","create",{repo:claRepo.repo,owner:claRepo.owner},function(err,data){!err&&data&&data.value&&(claRepo.active=data.value.active)})},$scope.removeWebhook=function(claRepo){$RPCService.call("webhook","remove",{repo:claRepo.repo,user:claRepo.owner},function(err,data){err||(claRepo.active=!1)})},$scope.addRepo=function(){confirmAdd()},$scope.link=function(){var newClaRepo={repo:$scope.selectedRepo.repo.name,owner:$scope.selectedRepo.repo.owner.login,gist:$scope.selectedGist.gist.url,active:!1};newClaRepo=mixRepoData(newClaRepo);var promise1=$RPCService.call("repo","create",{repo:newClaRepo.repo,owner:newClaRepo.owner,gist:newClaRepo.gist},function(err,data){if(err&&err.err.match(/.*duplicate key error.*/)&&showErrorMessage("This repository is already set up."),err||!data.value){$scope.removeWebhook(newClaRepo);var i=$scope.claRepos.indexOf(newClaRepo);i>-1&&$scope.claRepos.splice(i,1)}else $scope.claRepos.push(newClaRepo),$scope.query.text=""}),promise2=$scope.addWebhook(newClaRepo);return $q.all([promise1,promise2])},$scope.remove=function(claRepo){$RPCService.call("repo","remove",{repo:claRepo.repo,owner:claRepo.owner,gist:claRepo.gist},function(err,data){if(!err){var i=$scope.claRepos.indexOf(claRepo);i>-1&&$scope.claRepos.splice(i,1)}}),$RPCService.call("webhook","remove",{repo:claRepo.repo,user:claRepo.owner},function(err,data){err||(claRepo.active=!1)})},$scope.getSignatures=function(claRepo){return $RPCService.call("cla","getAll",{repo:claRepo.repo,owner:claRepo.owner,gist:{gist_url:claRepo.gist}})};var getGithubUserData=function(login){return $HUBService.call("user","getFrom",{user:login})};$scope.getUsers=function(claRepo){return $scope.getSignatures(claRepo).then(function(data){$scope.users=[],data&&data.value&&data.value.forEach(function(signature){getGithubUserData(signature.user).then(function(user){user.value.cla=signature,$scope.users.push(user.value)})})})},$scope.scrollTo=function(id){$document.scrollTopAnimated(0,800)},$scope.isActive=function(viewLocation){return viewLocation===$location.url()},$scope.groupDefaultCla=function(gist){var found=!1;return $scope.defaultClas.some(function(defCla){return gist.url===defCla.url?found=!0:void 0}),found?"Default CLAs":"My Gist Files"}}]).directive("resize",["$window",function($window){return{scope:{resize:"@"},link:function(scope,element,attrs){var el=element,positionElement=function(){"height"===scope.resize?el.css("height",$window.innerHeight+"px"):"max-width"===scope.resize&&el.css("max-width",this.innerWidth-100)};angular.element($window).bind("resize",function(){positionElement(),scope.$apply()}),angular.element($window).bind("load",function(){positionElement(),scope.$apply()})}}}]).directive("feature",["$window",function($window){return{templateUrl:"/templates/feature.html",scope:{id:"@",iconSrc:"@",header:"@",text:"@"},link:function(scope,element,attrs){}}}]).directive("textSlider",["$window","$timeout",function($window,$timeout){return{scope:{time:"@",active:"="},link:function(scope,element,attrs){var children=element.children(),start=function(){$timeout(function(){scope.active=scope.active+1===children.length?0:scope.active+1,start()},scope.time)};start()}}}]),filters.filter("notIn",function(){return function(repos,arr){if(0===arr.length)return repos;var notMatched=[];return repos.forEach(function(item){var found=!1;arr.some(function(claRepo){return found=claRepo.repo===item.name&&claRepo.owner===item.owner.login?!0:!1}),found||notMatched.push(item)}),notMatched}}),module.controller("RootCtrl",["$rootScope","$scope","$stateParams","$HUB","$RPC","$RAW","$timeout",function($rootScope,$scope,$stateParams,$HUB,$RPC,$RAW,$timeout){}]),module.controller("SettingsCtrl",["$rootScope","$scope","$stateParams","$HUB","$RPCService","$window","$sce","$modal",function($rootScope,$scope,$stateParams,$HUB,$RPCService,$window,$sce,$modal){function gistArgs(){var args={gist_url:$scope.repo.gist};return $scope.gist.history&&$scope.gist.history.length>0&&(args.gist_version=$scope.gist.history[$scope.gistIndex].version),args}$scope.gist={},$scope.gistIndex=0,$scope.admin=!1,$scope.users=[],$scope.errorMsg=[],$scope.loading=!1,$scope.gistValid=!0,$scope.contributors=[],$scope.isValid=function(gist){var valid=!1;return valid=gist?!!gist.match(/https:\/\/gist\.github\.com\/([a-zA-Z0-9_-]*)/):!1,valid?gist:void 0},$scope.open_error=function(){$modal.open({templateUrl:"/modals/templates/error_modal.html",controller:"ErrorCtrl"})},$scope.getGist=function(){$scope.loading=!0,$RPCService.call("cla","getGist",{repo:$scope.repo.repo,owner:$scope.repo.owner,gist:gistArgs()},function(err,data){!err&&data.value&&($scope.gist=data.value),$scope.loading=!1,$scope.gist.linked=!0})},$scope.getGistName=function(){return $scope.gist&&$scope.gist.files?$scope.gist.files[Object.keys($scope.gist.files)[0]].filename:""},$scope.logAdminIn=function(){$window.location.href="/auth/github?admin=true"},$scope.update=function(){$scope.gistValid=$scope.isValid($scope.repo.gist),(!$scope.repo.gist||$scope.gistValid)&&($scope.repo.gist?$RPCService.call("webhook","create",{repo:$scope.repo.repo,owner:$scope.repo.owner},function(err,data){err||($scope.repo.active=!0)}):$RPCService.call("webhook","remove",{repo:$scope.repo.repo,user:$scope.repo.owner},function(err,data){err||($scope.repo.active=!1)}),$RPCService.call("repo","update",{repo:$scope.repo.repo,owner:$scope.repo.owner,gist:$scope.repo.gist},function(err,data){$scope.repo.gist&&($scope.getGist(),$scope.$parent.getSignatures($scope.repo).then(function(signatures){signatures&&signatures.value&&($scope.contributors=signatures.value)}))}))},$scope.renderHtml=function(html_code){return $sce.trustAsHtml(html_code)},$scope.repo.gist&&($scope.getGist(),$scope.$parent.getSignatures($scope.repo).then(function(signatures){signatures&&signatures.value&&($scope.contributors=signatures.value)}))}]),module.directive("settings",[function(elem,attr){return{templateUrl:"/templates/settings.html",controller:"SettingsCtrl",transclude:!0,scope:{repo:"=",user:"="}}}]),module.controller("ConfirmCtrl",function($scope,$modalInstance,$window,$timeout,selectedGist,selectedRepo,$state,$RPCService){$scope.gist=selectedGist&&selectedGist.gist?selectedGist.gist:null,$scope.repo=selectedRepo&&selectedRepo.repo?selectedRepo.repo:null,$scope.ok=function(){$modalInstance.close(selectedRepo)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),module.controller("ErrorCtrl",function($scope,$modalInstance,$window,$timeout,$state,$RPCService){$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),module.controller("InfoCtrl",function($scope,$modalInstance,$window){$scope.origin=$window.location.origin,$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),module.controller("LinkCtrl",function($scope,$modalInstance,$window,selectedGist,selectedRepo,$state,$RPCService){console.log("modal status",$scope.linkStatus),$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),module.controller("ReportCtrl",function($scope,$modalInstance,$window,repo,$state,$RPCService){$scope.claRepo=repo,$scope.gist=null,$scope.getGistName=function(){return $scope.gist&&$scope.gist.files?$scope.gist.files[Object.keys($scope.gist.files)[0]].filename:""};var getGist=function(){$RPCService.call("cla","getGist",{repo:$scope.claRepo.repo,owner:$scope.claRepo.owner,gist:$scope.claRepo.gist},function(err,data){!err&&data.value&&($scope.gist=data.value)})};$scope.cancel=function(){$modalInstance.dismiss("cancel")},getGist()});
=======
"use strict";function ResultSet(){this.loaded=!1,this.loading=!0}var module=angular.module("app",["cla.filters","ui.utils","ui.router","ui.bootstrap","ui.select","ngSanitize","ngAnimate"]),filters=angular.module("cla.filters",[]);angular.element(document).ready(function(){angular.bootstrap(document,["app"])}),module.config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider,$locationProvider){$stateProvider.state("home",{url:"/",templateUrl:"/templates/home.html",controller:"HomeCtrl"}).state("home.settings",{templateUrl:"/templates/settings.html",controller:"SettingsCtrl",params:{user:{},owner:{},repo:{},gist:{}}}).state("repo",{"abstract":!0,url:"/:user/:repo?pullRequest",template:"<section ui-view></section>"}).state("repo.cla",{url:"",templateUrl:"/templates/cla.html",controller:"ClaController"}),$urlRouterProvider.otherwise("/"),$locationProvider.html5Mode({enabled:!0,requireBase:!1})}]).run(["$rootScope","$state","$stateParams",function($rootScope,$state,$stateParams){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams}]),ResultSet.prototype.set=function(error,value){this.loaded=!0,this.loading=!1,this.error=error,this.affix=value,this.value=this.value instanceof Array&&value instanceof Array?this.value.concat(value):value},module.factory("$RAW",["$q","$http",function($q,$http){return{call:function(m,functn,data,callback){var now=new Date;return $http.post("/api/"+m+"/"+functn,data).success(function(res){try{res=JSON.parse(res)}catch(ex){}callback(null,res,new Date-now)}).error(function(res){callback(res,null,new Date-now)})},get:function(url,user_token){var deferred=$q.defer(),header={};return header.Accept="application/vnd.github.moondragon+json",user_token&&(header.Authorization="token "+user_token),$http.get(url,{headers:header}).success(function(data,status){deferred.resolve(data)}).error(function(err,status){deferred.reject(err)}),deferred.promise},post:function(url,d,user_token){var deferred=$q.defer();return $http.post(url,d).success(function(data,status){deferred.resolve(data)}).error(function(err,status){deferred.reject(err)}),deferred.promise}}}]),module.factory("$RPC",["$RAW","$log",function($RAW,$log){return{call:function(m,functn,data,callback){var res=new ResultSet;return $RAW.call(m,functn,data,function(error,value){res.set(error,value),$log.debug("$RPC",m,functn,data,res,res.error),"function"==typeof callback&&callback(res.error,res)}),res}}}]),module.factory("$HUB",["$RAW","$log",function($RAW,$log){function parse_link_header(header){if(0===header.length)throw new Error("input must not be of zero length");var parts=header.split(","),links={};return parts.forEach(function(p){var section=p.split(";");if(2!==section.length)throw new Error('section could not be split on ";"');var url=section[0].replace(/<(.*)>/,"$1").trim(),name=section[1].replace(/rel="(.*)"/,"$1").trim();links[name]=url}),links}var exec=function(type,res,args,call){return $RAW.call("github",type,args,function(error,value){var data=value?value.data:null,meta=value?value.meta:null;if(!data&&value&&(data=value),res.set(error,data),meta){res.meta=meta;var links=meta.link?parse_link_header(meta.link):null;res.hasMore=meta.hasMore||!!links&&!!links.next,res.getMore=res.hasMore?function(){res.loaded=!1,res.loading=!0,links.next?args.url=links.next:args.arg.page=args.arg.page+1||2,exec(type,res,args,call)}:null}$log.debug("$HUB",args,res,res.error),"function"==typeof call&&call(res.error,res)}),res};return{call:function(o,functn,data,callback){return exec("call",new ResultSet,{obj:o,fun:functn,arg:data},callback)},direct_call:function(url,data,callback){return exec("direct_call",new ResultSet,{url:url,arg:data},callback)},wrap:function(o,functn,data,callback){return exec("wrap",new ResultSet,{obj:o,fun:functn,arg:data},callback)}}}]),module.factory("$HUBService",["$q","$HUB",function($q,$HUB){var exec=function(type,o,functn,data,callback){var deferred=$q.defer();return $HUB[type](o,functn,data,function(err,obj){return"function"==typeof callback&&callback(err,obj),err||deferred.resolve(obj),deferred.reject(err)}),deferred.promise},exec_direct=function(type,url,data){var deferred=$q.defer();return $HUB[type](url,data,function(err,obj){return err?deferred.reject(err):obj.hasMore?void obj.getMore():deferred.resolve(obj)}),deferred.promise};return{call:function(o,functn,data,callback){return exec("call",o,functn,data,callback)},direct_call:function(url,data){return exec_direct("direct_call",url,data)},wrap:function(o,functn,data,callback){return exec("wrap",o,functn,data,callback)}}}]),module.factory("$RPCService",["$q","$RPC",function($q,$RPC){return{call:function(o,functn,data,callback){var deferred=$q.defer();return $RPC.call(o,functn,data,function(err,obj){return"function"==typeof callback&&callback(err,obj),err||deferred.resolve(obj),deferred.reject()}),deferred.promise}}}]),module.controller("ClaController",["$window","$scope","$stateParams","$RAW","$RPCService","$HUBService","$modal","$sce","$timeout","$http","$q",function($window,$scope,$stateParams,$RAW,$RPCService,$HUBService,$modal,$sce,$timeout,$http,$q){function getCLA(){return $RPCService.call("cla","get",{repo:$stateParams.repo,owner:$stateParams.user},function(err,cla){err||($scope.claText=cla.value.raw)})}function checkCLA(){return $RPCService.call("cla","check",{repo:$stateParams.repo,owner:$stateParams.user},function(err,signed){!err&&signed.value&&($scope.signed=!0)})}function checkRepo(callback){return $RPCService.call("repo","check",{repo:$stateParams.repo,owner:$stateParams.user},function(err,exists){callback(exists.value)})}$scope.cla=null,$scope.signed=!1,$scope.signedCLA=null,$scope.repoExists=!1,$scope.params=$stateParams,$scope.user={},$scope.redirect="https://github.com/"+$stateParams.user+"/"+$stateParams.repo;var getUser=function(){return $HUBService.call("user","get",{},function(err,res){err||($scope.user=res,$scope.user.value.admin=!1,res.meta&&res.meta.scopes&&res.meta.scopes.indexOf("write:repo_hook")>-1&&($scope.user.value.admin=!0))})};$scope.agree=function(){var acceptUrl="/accept/"+$stateParams.user+"/"+$stateParams.repo;acceptUrl=$stateParams.pullRequest?acceptUrl+"?pullRequest="+$stateParams.pullRequest:acceptUrl,$window.location.href=acceptUrl};var userPromise=getUser(),repoPromise=checkRepo(function(exists){$scope.repoExists=exists,$scope.repoExists&&getCLA().then(function(data){$scope.cla=$sce.trustAsHtml(data.value.raw),$scope.cla.text=data.value.raw})});$q.all([userPromise,repoPromise]).then(function(){$stateParams.pullRequest&&($scope.redirect=$scope.redirect+"/pull/"+$stateParams.pullRequest),$scope.user&&$scope.user.value&&$scope.repoExists&&checkCLA().then(function(signed){signed.value&&($http.get("/logout?noredirect=true"),$timeout(function(){$window.location.href=$scope.redirect},5e3))})})}]),module.controller("HomeCtrl",["$rootScope","$scope","$document","$HUB","$RPCService","$RAW","$HUBService","$window","$modal","$timeout","$q","$location","$anchorScroll",function($rootScope,$scope,$document,$HUB,$RPCService,$RAW,$HUBService,$window,$modal,$timeout,$q,$location,$anchorScroll){$scope.repos=[],$scope.gists=[],$scope.claRepos=[],$scope.selectedRepo={},$scope.selectedGist={},$scope.query={},$scope.errorMsg=[],$scope.openSettings=!1,$scope.users=[],$scope.selectedIndex=-1,$scope.user={},$scope.nextstep={step1:!0},$scope.active=0,$scope.defaultClas=[];var githubGists="https://api.github.com/gists?per_page=100",githubUserRepos="https://api.github.com/user/repos?per_page=100";$scope.logAdminIn=function(){$window.location.href="/auth/github?admin=true"},$scope.isNotClaRepo=function(repo){var match=!1;return $scope.claRepos.some(function(claRepo){return match=claRepo.repo===repo.name&&claRepo.owner===repo.owner.login?!0:!1}),!match};var mixRepoData=function(claRepo){return $scope.repos.some(function(repo){return claRepo.repo===repo.name&&claRepo.owner===repo.owner.login?(claRepo.fork=repo.fork,!0):void 0}),claRepo},updateScopeData=function(){var repoSet=[];$scope.repos.forEach(function(repo){repoSet.push({owner:repo.owner.login,repo:repo.name})}),$RPCService.call("repo","getAll",{set:repoSet},function(err,data){$scope.claRepos=data.value,$scope.claRepos.forEach(function(claRepo){claRepo.active=claRepo.gist?!0:!1,claRepo=mixRepoData(claRepo)})})},getUser=function(){return $rootScope.user={value:{admin:!1}},$HUBService.call("user","get",{},function(err,res){err||($scope.user=res,$scope.user.value.admin=!1,res.meta.scopes.indexOf("write:repo_hook")>-1&&($scope.user.value.admin=!0),$rootScope.user=$scope.user,$rootScope.$broadcast("user"))})},getRepos=function(){$scope.user&&$scope.user.value&&$scope.user.value.admin&&$HUBService.direct_call(githubUserRepos).then(function(data){data.value.forEach(function(orgRepo){$scope.repos.push(orgRepo)}),updateScopeData()})},getGists=function(){$scope.gists=[],$scope.defaultClas.length||$scope.getDefaultClaFiles().then(function(data){$scope.gists=$scope.gists.concat($scope.defaultClas)}),$scope.gists=$scope.defaultClas.concat([]),$HUBService.direct_call(githubGists).then(function(data){data&&data.value&&data.value.forEach(function(gist){var gistFile={};gistFile.name=Object.keys(gist.files)[0],gistFile.name=gist.files[gistFile.name].filename?gist.files[gistFile.name].filename:gistFile.name,gistFile.url=gist.html_url,$scope.gists.push(gistFile)})})},showErrorMessage=function(text){var error=text;$timeout(function(){var i=$scope.errorMsg.indexOf(error);i>-1&&$scope.errorMsg.splice(i,1)},3e3),$scope.errorMsg.push(error)},linkSuccess=function(){var modal=$modal.open({templateUrl:"/modals/templates/linkSuccess.html",controller:"LinkCtrl",windowClass:"link-success",scope:$scope,resolve:{selectedGist:function(){return $scope.selectedGist},selectedRepo:function(){return $scope.selectedRepo}}});modal.result.then(function(){$scope.selectedRepo={},$scope.selectedGist={},$scope.newLink=!1},function(){$scope.selectedRepo={},$scope.selectedGist={},$scope.newLink=!1})},confirmAdd=function(){var modal=$modal.open({templateUrl:"/modals/templates/confirmLink.html",controller:"ConfirmCtrl",windowClass:"confirm-add",resolve:{selectedGist:function(){return $scope.selectedGist},selectedRepo:function(){return $scope.selectedRepo}}});modal.result.then(function(){$scope.linkStatus=null,linkSuccess(),$scope.link().then(function(){$scope.linkStatus="linked"},function(){$scope.linkStatus="failed"})})};$scope.confirmRemove=function(claRepo){var modal=$modal.open({templateUrl:"/modals/templates/confirmRemove.html",controller:"ConfirmCtrl",windowClass:"confirm-add",resolve:{selectedGist:function(){return{}},selectedRepo:function(){return claRepo}}});modal.result.then(function(repo){$scope.remove(repo)})};var report=function(claRepo){$modal.open({templateUrl:"/modals/templates/report.html",controller:"ReportCtrl",windowClass:"report",scope:$scope,resolve:{repo:function(){return claRepo}}})};$scope.getReport=function(claRepo){$scope.users=[],$scope.getUsers(claRepo).then(function(){}),report(claRepo)},$scope.info=function(){$modal.open({templateUrl:"/modals/templates/info_gist.html",controller:"InfoCtrl",windowClass:"howto"})},$scope.getDefaultClaFiles=function(){return $RAW.get("/static/cla-assistant.json").then(function(data){$scope.defaultClas=data["default-cla"]})},getUser().then(function(){getRepos(),getGists()}),$scope.clear=function($event){$event.stopPropagation(),$scope.selectedGist.gist=void 0},$scope.isValid=function(gist){var valid=!1;return valid=gist?!!gist.match(/https:\/\/gist\.github\.com\/([a-zA-Z0-9_-]*)/):!1},$scope.addWebhook=function(claRepo){claRepo.gist&&$RPCService.call("webhook","create",{repo:claRepo.repo,owner:claRepo.owner},function(err,data){!err&&data&&data.value&&(claRepo.active=data.value.active)})},$scope.removeWebhook=function(claRepo){$RPCService.call("webhook","remove",{repo:claRepo.repo,user:claRepo.owner},function(err,data){err||(claRepo.active=!1)})},$scope.addRepo=function(){confirmAdd()},$scope.link=function(){var newClaRepo={repo:$scope.selectedRepo.repo.name,owner:$scope.selectedRepo.repo.owner.login,gist:$scope.selectedGist.gist.url,active:!1};newClaRepo=mixRepoData(newClaRepo);var promise1=$RPCService.call("repo","create",{repo:newClaRepo.repo,owner:newClaRepo.owner,gist:newClaRepo.gist},function(err,data){if(err&&err.err.match(/.*duplicate key error.*/)&&showErrorMessage("This repository is already set up."),err||!data.value){$scope.removeWebhook(newClaRepo);var i=$scope.claRepos.indexOf(newClaRepo);i>-1&&$scope.claRepos.splice(i,1)}else $scope.claRepos.push(newClaRepo),$scope.query.text=""}),promise2=$scope.addWebhook(newClaRepo);return $q.all([promise1,promise2])},$scope.remove=function(claRepo){$RPCService.call("repo","remove",{repo:claRepo.repo,owner:claRepo.owner,gist:claRepo.gist},function(err,data){if(!err){var i=$scope.claRepos.indexOf(claRepo);i>-1&&$scope.claRepos.splice(i,1)}}),$RPCService.call("webhook","remove",{repo:claRepo.repo,user:claRepo.owner},function(err,data){err||(claRepo.active=!1)})},$scope.getSignatures=function(claRepo){return $RPCService.call("cla","getAll",{repo:claRepo.repo,owner:claRepo.owner,gist:{gist_url:claRepo.gist}})};var getGithubUserData=function(login){return $HUBService.call("user","getFrom",{user:login})};$scope.getUsers=function(claRepo){return $scope.getSignatures(claRepo).then(function(data){$scope.users=[],data&&data.value&&data.value.forEach(function(signature){getGithubUserData(signature.user).then(function(user){user.value.cla=signature,$scope.users.push(user.value)})})})},$scope.scrollTo=function(id){$document.scrollTopAnimated(0,800)},$scope.isActive=function(viewLocation){return viewLocation===$location.url()},$scope.groupDefaultCla=function(gist){var found=!1;return $scope.defaultClas.some(function(defCla){return gist.url===defCla.url?found=!0:void 0}),found?"Default CLAs":"My Gist Files"}}]).directive("resize",["$window",function($window){return{scope:{resize:"@"},link:function(scope,element,attrs){var el=element,positionElement=function(){"height"===scope.resize?el.css("height",$window.innerHeight+"px"):"max-width"===scope.resize&&el.css("max-width",this.innerWidth-100)};angular.element($window).bind("resize",function(){positionElement(),scope.$apply()}),angular.element($window).bind("load",function(){positionElement(),scope.$apply()})}}}]).directive("feature",["$window",function($window){return{templateUrl:"/templates/feature.html",scope:{id:"@",iconSrc:"@",header:"@",text:"@"},link:function(scope,element,attrs){}}}]).directive("textSlider",["$window","$timeout",function($window,$timeout){return{scope:{time:"@",active:"="},link:function(scope,element,attrs){var children=element.children(),start=function(){$timeout(function(){scope.active=scope.active+1===children.length?0:scope.active+1,start()},scope.time)};start()}}}]),filters.filter("notIn",function(){return function(repos,arr){if(0===arr.length)return repos;var notMatched=[];return repos.forEach(function(item){var found=!1;arr.some(function(claRepo){return found=claRepo.repo===item.name&&claRepo.owner===item.owner.login?!0:!1}),found||notMatched.push(item)}),notMatched}}),module.controller("RootCtrl",["$rootScope","$scope","$stateParams","$HUB","$RPC","$RAW","$timeout",function($rootScope,$scope,$stateParams,$HUB,$RPC,$RAW,$timeout){}]),module.controller("SettingsCtrl",["$rootScope","$scope","$stateParams","$HUB","$RPCService","$window","$sce","$modal",function($rootScope,$scope,$stateParams,$HUB,$RPCService,$window,$sce,$modal){function gistArgs(){var args={gist_url:$scope.repo.gist};return $scope.gist.history&&$scope.gist.history.length>0&&(args.gist_version=$scope.gist.history[$scope.gistIndex].version),args}$scope.gist={},$scope.gistIndex=0,$scope.admin=!1,$scope.users=[],$scope.errorMsg=[],$scope.loading=!1,$scope.gistValid=!0,$scope.contributors=[],$scope.isValid=function(gist){var valid=!1;return valid=gist?!!gist.match(/https:\/\/gist\.github\.com\/([a-zA-Z0-9_-]*)/):!1,valid?gist:void 0},$scope.getGist=function(){$scope.loading=!0,$RPCService.call("cla","getGist",{repo:$scope.repo.repo,owner:$scope.repo.owner,gist:gistArgs()},function(err,data){!err&&data.value&&($scope.gist=data.value),$scope.loading=!1,$scope.gist.linked=!0})},$scope.getGistName=function(){return $scope.gist&&$scope.gist.files?$scope.gist.files[Object.keys($scope.gist.files)[0]].filename:""},$scope.logAdminIn=function(){$window.location.href="/auth/github?admin=true"},$scope.update=function(){$scope.gistValid=$scope.isValid($scope.repo.gist),(!$scope.repo.gist||$scope.gistValid)&&($scope.repo.gist?$RPCService.call("webhook","create",{repo:$scope.repo.repo,owner:$scope.repo.owner},function(err,data){err||($scope.repo.active=!0)}):$RPCService.call("webhook","remove",{repo:$scope.repo.repo,user:$scope.repo.owner},function(err,data){err||($scope.repo.active=!1)}),$RPCService.call("repo","update",{repo:$scope.repo.repo,owner:$scope.repo.owner,gist:$scope.repo.gist},function(err,data){$scope.repo.gist&&($scope.getGist(),$scope.$parent.getSignatures($scope.repo).then(function(signatures){signatures&&signatures.value&&($scope.contributors=signatures.value)}))}))},$scope.renderHtml=function(html_code){return $sce.trustAsHtml(html_code)},$scope.repo.gist&&($scope.getGist(),$scope.$parent.getSignatures($scope.repo).then(function(signatures){signatures&&signatures.value&&($scope.contributors=signatures.value)}))}]),module.directive("settings",[function(elem,attr){return{templateUrl:"/templates/settings.html",controller:"SettingsCtrl",transclude:!0,scope:{repo:"=",user:"="}}}]),module.controller("ConfirmCtrl",function($scope,$modalInstance,$window,$timeout,selectedGist,selectedRepo,$state,$RPCService){$scope.gist=selectedGist&&selectedGist.gist?selectedGist.gist:null,$scope.repo=selectedRepo&&selectedRepo.repo?selectedRepo.repo:null,$scope.ok=function(){$modalInstance.close(selectedRepo)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),module.controller("InfoCtrl",function($scope,$modalInstance,$window){$scope.origin=$window.location.origin,$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),module.controller("LinkCtrl",function($scope,$modalInstance,$window,selectedGist,selectedRepo,$state,$RPCService){console.log("modal status",$scope.linkStatus),$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),module.controller("ReportCtrl",function($scope,$modalInstance,$window,repo,$state,$RPCService){$scope.claRepo=repo,$scope.gist=null,$scope.getGistName=function(){return $scope.gist&&$scope.gist.files?$scope.gist.files[Object.keys($scope.gist.files)[0]].filename:""};var getGist=function(){$RPCService.call("cla","getGist",{repo:$scope.claRepo.repo,owner:$scope.claRepo.owner,gist:$scope.claRepo.gist},function(err,data){!err&&data.value&&($scope.gist=data.value)})};$scope.cancel=function(){$modalInstance.dismiss("cancel")},getGist()});
>>>>>>> origin/master
//# sourceMappingURL=app.min.js.map